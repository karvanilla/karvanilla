let level = 'primary'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã –Ω–∞ 'primary'
let correctCount = 0; // –°—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
let incorrectCount = 0; // –°—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
let questionsAsked = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
const totalQuestionsPerLevel = 10; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∫–∞–∂–¥–æ–º —É—Ä–æ–≤–Ω–µ
let timeElapsed = 0; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏, –ø—Ä–æ—à–µ–¥—à–µ–≥–æ —Å –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
let timer; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
let currentQuestionAnswer; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å

const levels = { // –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
    primary: { operator: ['+', '-', '*'], maxNum: 10 }, // –£—Ä–æ–≤–µ–Ω—å 'primary' —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º
    average: { operator: ['>', '<'], maxNum: 20 }, // –£—Ä–æ–≤–µ–Ω—å 'average' —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    advanced: { operator: ['+', '*'], maxNum: 5 } // –£—Ä–æ–≤–µ–Ω—å 'advanced' —Å –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ
};

function startGame() { // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    correctCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    incorrectCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    questionsAsked = []; // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    timeElapsed = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è
    document.getElementById('correct-count').innerText = correctCount; // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    document.getElementById('incorrect-count').innerText = incorrectCount; // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ

    timer = setInterval(() => { // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
        timeElapsed++;
        document.getElementById('time').innerText = `Time left: ${timeElapsed}`; // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    }, 1000);

    askQuestion(); // –ó–∞–¥–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
}

function askQuestion() { // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞
    if (questionsAsked.length >= totalQuestionsPerLevel) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤
        checkLevelUp(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å
        return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
    }

    const question = generateQuestion(); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
    currentQuestionAnswer = question.answer; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    document.getElementById('question').innerText = question.text; // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
}

function generateQuestion() { // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–∞
    let operators = levels[level].operator; // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è

    let num1 = Math.floor(Math.random() * levels[level].maxNum); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö maxNum
    let num2 = Math.floor(Math.random() * levels[level].maxNum); // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ç–æ—Ä–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö maxNum

    let operatorIndex = Math.floor(Math.random() * operators.length); // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
    let operator = operators[operatorIndex]; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä

    let questionText, correctAnswer; // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞

    if (level === 'primary') { // –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å 'primary'
        if (operator === '+') {
            questionText = `${num1} + ${num2}`; // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —Å–ª–æ–∂–µ–Ω–∏—è
            correctAnswer = num1 + num2; // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —Å–ª–æ–∂–µ–Ω–∏—è
        } else if (operator === '-') {
            questionText = `${num1} - ${num2}`; // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –≤—ã—á–∏—Ç–∞–Ω–∏—è
            correctAnswer = num1 - num2; // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –≤—ã—á–∏—Ç–∞–Ω–∏—è
        } else if (operator === '*') {
            questionText = `${num1} * ${num2}`; // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —É–º–Ω–æ–∂–µ–Ω–∏—è
            correctAnswer = num1 * num2; // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —É–º–Ω–æ–∂–µ–Ω–∏—è
        }
    } else if (level === 'average') { // –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å 'average'
        if (operator === '>') {
            questionText = `${num1} > ${num2}`; // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –±–æ–ª—å—à–µ —á–µ–º
            correctAnswer = (num1 > num2) ? 1 : 0; // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - true –∫–∞–∫ 1, false –∫–∞–∫ 0 
        } else if (operator === '<') {
            questionText = `${num1} < ${num2}`; // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–µ–Ω—å—à–µ —á–µ–º
            correctAnswer = (num1 < num2) ? 1 : 0; 
        }
    } else if (level === 'advanced') { // –ï—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å 'advanced'
        let binaryNum1 = num1.toString(2); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –≤ –¥–≤–æ–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è
        let binaryNum2 = num2.toString(2); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ –≤ –¥–≤–æ–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è
        
        if (operator === '+') {
            questionText = `${binaryNum1} + ${binaryNum2} (–≤ –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ)`; 
            correctAnswer = parseInt(binaryNum1, 2) + parseInt(binaryNum2, 2); 
        } else if (operator === '*') {
            questionText = `${binaryNum1} * ${binaryNum2} (–≤ –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ)`; 
            correctAnswer = parseInt(binaryNum1, 2) * parseInt(binaryNum2, 2); 
        }
    }

    questionsAsked.push(questionText); // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å –≤ –º–∞—Å—Å–∏–≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤

    return { text: questionText, answer: correctAnswer }; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å —Ç–µ–∫—Å—Ç–æ–º –≤–æ–ø—Ä–æ—Å–∞ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º
}

document.getElementById('submit').addEventListener('click', () => { 
    const userAnswer = document.getElementById('answer').value.trim(); 

    if (userAnswer === '') return; 

    if ((userAnswer === 'undefined' && currentQuestionAnswer === 'undefined') || parseInt(userAnswer) === currentQuestionAnswer) { 
        correctCount++; 
        document.getElementById('result').innerHTML =
            "CORRECT! üéâ‚ù§Ô∏è‚ú®"; 

        setTimeout(() => { 
            document.getElementById('result').innerHTML = ''; 
            askQuestion(); 
        }, 2000);
        
        updateScoreboard(); 

    } else {
        incorrectCount++; 
        document.getElementById('result').innerHTML =
            "Try again! üò¢"; 

        setTimeout(() => { 
            document.getElementById('result').innerHTML = ''; 
            askQuestion(); 
        }, 2000);
        
        if (incorrectCount >= totalQuestionsPerLevel) endGame(); 
        
    }
});

function updateScoreboard() { 
    document.getElementById('correct-count').innerText = correctCount; 
    document.getElementById('incorrect-count').innerText = incorrectCount; 
}

function checkLevelUp() { 
   const totalCorrectAnswersNeededForLevelUp = Math.ceil(totalQuestionsPerLevel * 0.8); 

   if (correctCount >= totalCorrectAnswersNeededForLevelUp) {
       if (level === 'primary') level = 'average'; 
       else if (level === 'average') level = 'advanced'; 
       else endGame(); 

       questionsAsked.length = 0;
       askQuestion(); 
       document.getElementById('level').innerText = `Level: ${level}`; 
   } else {
       endGame(); 
   }
}

function endGame() { 
   clearInterval(timer); 
   alert(`–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: ${correctCount}, –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã: ${incorrectCount}`); 
   document.getElementById('restart').style.display = "block"; 
}

document.getElementById('restart').addEventListener('click', () => { 
   level = 'primary'; 
   document.getElementById('level').innerText = `Level: ${level}`; 
   startGame(); 
});

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
startGame();